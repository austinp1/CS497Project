version: "3.6"
services:
  challenges:
    build:
      context: ./challenges_service
    ports:
      - 5000:3000
    environment:
      DATABASE_URL="mongodb+srv://ampinto:n6u7V5wxoPmr6piX@cluster0.l4vjr.mongodb.net/challenges?retryWrites=true&w=majority;"
    networks:
      microservice:
  submission-history:
    build:
      # Build the service from the Dockerfile in ./submission-history
      context: ./submission-history
    environment:
      PORT: "5050"
      # TODO set this to something (but don't put it in a file commited to the public repo!)
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: submissionHistory
      MYSQL_HOST: "submission-history-database"
    ports:
      # Expose internal port 5050 on external port 7000.
      - 7000:5050
    networks:
      - submissionHistory
      - microservice
    depends_on:
      - submission-history-database
    restart: always
  submission-history-database:
    build:
      context: "./submission-history/submission-history-database/"
      args:
        # TODO set this to something (but don't put it in a file commited to the public repo!)
        MYSQL_ROOT_PASSWORD: password
    volumes:
      - "submissionHistoryData:/mysql_data"
    environment:
      # TODO set this to something (but don't put it in a file commited to the public repo!)
        MYSQL_ROOT_PASSWORD: password
    networks:
      submissionHistory:
      # https://stackoverflow.com/a/55706057
    cap_add:
      - SYS_NICE
    ports:
      - 3306:3306
  # Defines the account service
  accounts:
    build:
      # Build the account service from the Dockerfile in ./IdentityManagement
      context: ./IdentityManagement
    environment:
      # Listen on 0.0.0.0 to accept connections from any host.
      HOST: "0.0.0.0"
      PORT: "3000"
      SALT_ROUND: "12"
      # Connecting string for accessing local mongoDB service(matches the credentials below)
      DATABASE_URL: "mongodb://<username>:<password>@accounts_db:27017/?retryWrites=true&w=majority"
      DATABASE_USERNAME: "gerrygan98"
      DATABASE_PASSWORD: "password"
    ports:
      # Expose internal port 3000 on external port 4000.
      - 4000:3000
    networks:
      - accountsNetwork
      - microservice
  # Defines the mongoDB container for accounts service.
  accounts_db:
    image: "mongo"
    container_name: "accountsMongoDBContainer"
    environment:
      # Initializes mongoDB with the following credentials
      MONGO_INITDB_USERNAME: "gerrygan98"
      MONGO_INITDB_PASSWORD: "password"
    volumes:
      # Shell script for initializing the database
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
      - mongo_accounts_data:/data/db
    ports:
      # Expose internal port 27017 on external port 27019.
      - 27019:2701
    networks:
      - accountsNetwork
  submission-testing:
    build:
      context: ./submission-testing
    ports:
      - 8000:8080
    volumes:
      # Expose the host docker socket to the container so it can create new containers.
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      microservice:
networks:
  accountsNetwork:
  submissionHistory:
  microservice:
volumes:
  mongo_accounts_data:
  submissionHistoryData:
